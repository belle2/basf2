from variables import variables
# Ranking
variables.addAlias('vtx_rank', 'extraInfo(chiProb_rank)')
variables.addAlias('rnd', 'extraInfo(random_val)')
variables.addAlias('rnd_rank', 'extraInfo(rnd_rank)')

# MC matches
variables.addAlias('Kh0_mcPDG', 'daughter(0,daughter(0,abs(mcPDG)))')
variables.addAlias('Kh0_mcmotherPDG', 'daughter(0,daughter(0,abs(genMotherPDG)))')
variables.addAlias('Kh1_mcPDG', 'daughter(0,daughter(1,abs(mcPDG)))')
variables.addAlias('Kh1_mcmotherPDG', 'daughter(0,daughter(1,abs(genMotherPDG)))')
variables.addAlias('Rh0_mcPDG', 'daughter(1,daughter(0,abs(mcPDG)))')
variables.addAlias('Rh0_mcmotherPDG', 'daughter(1,daughter(0,abs(genMotherPDG)))')
variables.addAlias('Rh1_mcPDG', 'daughter(1,daughter(1,abs(mcPDG)))')
variables.addAlias('Rh1_mcmotherPDG', 'daughter(1,daughter(1,abs(genMotherPDG)))')
# CBS
variables.addAlias('out_FastBDT', 'extraInfo(FastBDT)')
variables.addAlias('csv_FastBDT', 'transformedNetworkOutput(FastBDT,0.,1.0)')

variables.addAlias('K_vs_pi', 'atcPIDBelle(3,2)')
variables.addAlias('p_vs_pi', 'atcPIDBelle(4,2)')
variables.addAlias('p_vs_K', 'atcPIDBelle(4,3)')
variables.addAlias('deltaE_corr', 'deltaE')
variables.addAlias('hel', 'decayAngle(0)')
variables.addAlias('MK', 'daughter(0,M)')
variables.addAlias('MR', 'daughter(1,M)')
variables.addAlias('helK_ref', 'daughter(0,decayAngle(0))')
variables.addAlias('helR_ref', 'daughter(1,decayAngle(0))')
variables.addAlias('MCT_Mbc_corr', 'matchedMC(Mbc_corr)')
variables.addAlias('MCT_deltaE_corr', 'matchedMC(deltaE)')
variables.addAlias('MCT_MK', 'daughter(0,matchedMC(M))')
variables.addAlias('MCT_MR', 'daughter(1,matchedMC(M))')

# Kst variables
variables.addAlias('K_px', 'daughter(0,px)')
variables.addAlias('K_py', 'daughter(0,py)')
variables.addAlias('K_pz', 'daughter(0,pz)')
variables.addAlias('K_pt', 'daughter(0,pt)')
variables.addAlias('K_p', 'daughter(0,p)')
variables.addAlias('K_E', 'daughter(0,E)')
variables.addAlias('K_M', 'daughter(0,M)')
variables.addAlias('K_ErrM', 'daughter(0,ErrM)')
variables.addAlias('K_SigM', 'daughter(0,SigM)')
variables.addAlias('K_charge', 'daughter(0,charge)')
variables.addAlias('K_isSignal', 'daughter(0,isSignal)')
variables.addAlias('K_PID_K_vs_pi', 'daughter(0,K_vs_pi)')
variables.addAlias('K_PID_p_vs_pi', 'daughter(0,p_vs_pi)')
variables.addAlias('K_PID_p_vs_K', 'daughter(0,p_vs_K)')
variables.addAlias('K_PID_muID', 'daughter(0,muIDBelle)')
variables.addAlias('K_PID_eID', 'daughter(0,eIDBelle)')
variables.addAlias('K_dr', 'daughter(0,dr)')
variables.addAlias('K_dx', 'daughter(0,dx)')
variables.addAlias('K_dy', 'daughter(0,dy)')
variables.addAlias('K_dz', 'daughter(0,dz)')
variables.addAlias('K_SOD', 'daughter(0,significanceOfDistance)')
variables.addAlias('MCT_K_px', 'daughter(0,matchedMC(px))')
variables.addAlias('MCT_K_py', 'daughter(0,matchedMC(py))')
variables.addAlias('MCT_K_pz', 'daughter(0,matchedMC(pz))')
variables.addAlias('MCT_K_pt', 'daughter(0,matchedMC(pt))')
variables.addAlias('MCT_K_p', 'daughter(0,matchedMC(p))')
variables.addAlias('MCT_K_E', 'daughter(0,matchedMC(E))')
variables.addAlias('MCT_K_M', 'daughter(0,matchedMC(M))')
variables.addAlias('MCT_K_ErrM', 'daughter(0,matchedMC(ErrM))')
variables.addAlias('MCT_K_SigM', 'daughter(0,matchedMC(SigM))')
variables.addAlias('MCT_K_charge', 'daughter(0,matchedMC(charge))')
variables.addAlias('MCT_K_isSignal', 'daughter(0,matchedMC(isSignal))')
variables.addAlias('MCT_K_mcPDG', 'daughter(0,matchedMC(mcPDG))')
variables.addAlias('MCT_K_PID_K_vs_pi', 'daughter(0,matchedMC(K_vs_pi))')
variables.addAlias('MCT_K_PID_p_vs_pi', 'daughter(0,matchedMC(p_vs_pi))')
variables.addAlias('MCT_K_PID_p_vs_K', 'daughter(0,matchedMC(p_vs_K))')
variables.addAlias('MCT_K_PID_muID', 'daughter(0,matchedMC(muIDBelle))')
variables.addAlias('MCT_K_PID_eID', 'daughter(0,matchedMC(eIDBelle))')
variables.addAlias('MCT_K_dr', 'daughter(0,matchedMC(dr))')
variables.addAlias('MCT_K_dx', 'daughter(0,matchedMC(dx))')
variables.addAlias('MCT_K_dy', 'daughter(0,matchedMC(dy))')
variables.addAlias('MCT_K_dz', 'daughter(0,matchedMC(dz))')
variables.addAlias('MCT_K_SOD', 'daughter(0,matchedMC(significanceOfDistance))')

# Kst first daughter variables
variables.addAlias('Kh0_px', 'daughter(0,daughter(0,px))')
variables.addAlias('Kh0_py', 'daughter(0,daughter(0,py))')
variables.addAlias('Kh0_pz', 'daughter(0,daughter(0,pz))')
variables.addAlias('Kh0_pt', 'daughter(0,daughter(0,pt))')
variables.addAlias('Kh0_p', 'daughter(0,daughter(0,p))')
variables.addAlias('Kh0_E', 'daughter(0,daughter(0,E))')
variables.addAlias('Kh0_M', 'daughter(0,daughter(0,M))')
variables.addAlias('Kh0_ErrM', 'daughter(0,daughter(0,ErrM))')
variables.addAlias('Kh0_SigM', 'daughter(0,daughter(0,SigM))')
variables.addAlias('Kh0_charge', 'daughter(0,daughter(0,charge))')
variables.addAlias('Kh0_isSignal', 'daughter(0,daughter(0,isSignal))')
variables.addAlias('Kh0_PID_K_vs_pi', 'daughter(0,daughter(0,K_vs_pi))')
variables.addAlias('Kh0_PID_p_vs_pi', 'daughter(0,daughter(0,p_vs_pi))')
variables.addAlias('Kh0_PID_p_vs_K', 'daughter(0,daughter(0,p_vs_K))')
variables.addAlias('Kh0_PID_muID', 'daughter(0,daughter(0,muIDBelle))')
variables.addAlias('Kh0_PID_eID', 'daughter(0,daughter(0,eIDBelle))')
variables.addAlias('Kh0_dr', 'daughter(0,daughter(0,dr))')
variables.addAlias('Kh0_dx', 'daughter(0,daughter(0,dx))')
variables.addAlias('Kh0_dy', 'daughter(0,daughter(0,dy))')
variables.addAlias('Kh0_dz', 'daughter(0,daughter(0,dz))')
variables.addAlias('Kh0_SOD', 'daughter(0,daughter(0,significanceOfDistance))')
variables.addAlias('MCT_Kh0_px', 'daughter(0,daughter(0,matchedMC(px)))')
variables.addAlias('MCT_Kh0_py', 'daughter(0,daughter(0,matchedMC(py)))')
variables.addAlias('MCT_Kh0_pz', 'daughter(0,daughter(0,matchedMC(pz)))')
variables.addAlias('MCT_Kh0_pt', 'daughter(0,daughter(0,matchedMC(pt)))')
variables.addAlias('MCT_Kh0_p', 'daughter(0,daughter(0,matchedMC(p)))')
variables.addAlias('MCT_Kh0_E', 'daughter(0,daughter(0,matchedMC(E)))')
variables.addAlias('MCT_Kh0_M', 'daughter(0,daughter(0,matchedMC(M)))')
variables.addAlias('MCT_Kh0_ErrM', 'daughter(0,daughter(0,matchedMC(ErrM)))')
variables.addAlias('MCT_Kh0_SigM', 'daughter(0,daughter(0,matchedMC(SigM)))')
variables.addAlias('MCT_Kh0_charge', 'daughter(0,daughter(0,matchedMC(charge)))')
variables.addAlias('MCT_Kh0_isSignal', 'daughter(0,daughter(0,matchedMC(isSignal)))')
variables.addAlias('MCT_Kh0_mcPDG', 'daughter(0,daughter(0,matchedMC(mcPDG)))')
variables.addAlias('MCT_Kh0_PID_K_vs_pi', 'daughter(0,daughter(0,matchedMC(K_vs_pi)))')
variables.addAlias('MCT_Kh0_PID_p_vs_pi', 'daughter(0,daughter(0,matchedMC(p_vs_pi)))')
variables.addAlias('MCT_Kh0_PID_p_vs_K', 'daughter(0,daughter(0,matchedMC(p_vs_K)))')
variables.addAlias('MCT_Kh0_PID_muID', 'daughter(0,daughter(0,matchedMC(muIDBelle)))')
variables.addAlias('MCT_Kh0_PID_eID', 'daughter(0,daughter(0,matchedMC(eIDBelle)))')
variables.addAlias('MCT_Kh0_dr', 'daughter(0,daughter(0,matchedMC(dr)))')
variables.addAlias('MCT_Kh0_dx', 'daughter(0,daughter(0,matchedMC(dx)))')
variables.addAlias('MCT_Kh0_dy', 'daughter(0,daughter(0,matchedMC(dy)))')
variables.addAlias('MCT_Kh0_dz', 'daughter(0,daughter(0,matchedMC(dz)))')
variables.addAlias('MCT_Kh0_SOD', 'daughter(0,daughter(0,matchedMC(significanceOfDistance)))')
variables.addAlias('hel_Kh0_px', 'daughter(0,useRestFrame(daughter(0,px)))')
variables.addAlias('hel_Kh0_py', 'daughter(0,useRestFrame(daughter(0,py)))')
variables.addAlias('hel_Kh0_pz', 'daughter(0,useRestFrame(daughter(0,pz)))')
variables.addAlias('hel_Kh0_p', 'daughter(0,useRestFrame(daughter(0,p)))')
variables.addAlias('hel_MCT_Kh0_px', 'daughter(0,useRestFrame(daughter(0,matchedMC(px))))')
variables.addAlias('hel_MCT_Kh0_py', 'daughter(0,useRestFrame(daughter(0,matchedMC(py))))')
variables.addAlias('hel_MCT_Kh0_pz', 'daughter(0,useRestFrame(daughter(0,matchedMC(pz))))')
variables.addAlias('hel_MCT_Kh0_p', 'daughter(0,useRestFrame(daughter(0,matchedMC(p))))')

# Kst second daughter variables
variables.addAlias('Kh1_px', 'daughter(0,daughter(1,px))')
variables.addAlias('Kh1_py', 'daughter(0,daughter(1,py))')
variables.addAlias('Kh1_pz', 'daughter(0,daughter(1,pz))')
variables.addAlias('Kh1_pt', 'daughter(0,daughter(1,pt))')
variables.addAlias('Kh1_p', 'daughter(0,daughter(1,p))')
variables.addAlias('Kh1_E', 'daughter(0,daughter(1,E))')
variables.addAlias('Kh1_M', 'daughter(0,daughter(1,M))')
variables.addAlias('Kh1_ErrM', 'daughter(0,daughter(1,ErrM))')
variables.addAlias('Kh1_SigM', 'daughter(0,daughter(1,SigM))')
variables.addAlias('Kh1_charge', 'daughter(0,daughter(1,charge))')
variables.addAlias('Kh1_isSignal', 'daughter(0,daughter(1,isSignal))')
variables.addAlias('Kh1_PID_K_vs_pi', 'daughter(0,daughter(1,K_vs_pi))')
variables.addAlias('Kh1_PID_p_vs_pi', 'daughter(0,daughter(1,p_vs_pi))')
variables.addAlias('Kh1_PID_p_vs_K', 'daughter(0,daughter(1,p_vs_K))')
variables.addAlias('Kh1_PID_muID', 'daughter(0,daughter(1,muIDBelle))')
variables.addAlias('Kh1_PID_eID', 'daughter(0,daughter(1,eIDBelle))')
variables.addAlias('Kh1_dr', 'daughter(0,daughter(1,dr))')
variables.addAlias('Kh1_dx', 'daughter(0,daughter(1,dx))')
variables.addAlias('Kh1_dy', 'daughter(0,daughter(1,dy))')
variables.addAlias('Kh1_dz', 'daughter(0,daughter(1,dz))')
variables.addAlias('Kh1_SOD', 'daughter(0,daughter(1,significanceOfDistance))')
variables.addAlias('MCT_Kh1_px', 'daughter(0,daughter(1,matchedMC(px)))')
variables.addAlias('MCT_Kh1_py', 'daughter(0,daughter(1,matchedMC(py)))')
variables.addAlias('MCT_Kh1_pz', 'daughter(0,daughter(1,matchedMC(pz)))')
variables.addAlias('MCT_Kh1_pt', 'daughter(0,daughter(1,matchedMC(pt)))')
variables.addAlias('MCT_Kh1_p', 'daughter(0,daughter(1,matchedMC(p)))')
variables.addAlias('MCT_Kh1_E', 'daughter(0,daughter(1,matchedMC(E)))')
variables.addAlias('MCT_Kh1_M', 'daughter(0,daughter(1,matchedMC(M)))')
variables.addAlias('MCT_Kh1_ErrM', 'daughter(0,daughter(1,matchedMC(ErrM)))')
variables.addAlias('MCT_Kh1_SigM', 'daughter(0,daughter(1,matchedMC(SigM)))')
variables.addAlias('MCT_Kh1_charge', 'daughter(0,daughter(1,matchedMC(charge)))')
variables.addAlias('MCT_Kh1_isSignal', 'daughter(0,daughter(1,matchedMC(isSignal)))')
variables.addAlias('MCT_Kh1_mcPDG', 'daughter(0,daughter(1,matchedMC(mcPDG)))')
variables.addAlias('MCT_Kh1_PID_K_vs_pi', 'daughter(0,daughter(1,matchedMC(K_vs_pi)))')
variables.addAlias('MCT_Kh1_PID_p_vs_pi', 'daughter(0,daughter(1,matchedMC(p_vs_pi)))')
variables.addAlias('MCT_Kh1_PID_p_vs_K', 'daughter(0,daughter(1,matchedMC(p_vs_K)))')
variables.addAlias('MCT_Kh1_PID_muID', 'daughter(0,daughter(1,matchedMC(muIDBelle)))')
variables.addAlias('MCT_Kh1_PID_eID', 'daughter(0,daughter(1,matchedMC(eIDBelle)))')
variables.addAlias('MCT_Kh1_dr', 'daughter(0,daughter(1,matchedMC(dr)))')
variables.addAlias('MCT_Kh1_dx', 'daughter(0,daughter(1,matchedMC(dx)))')
variables.addAlias('MCT_Kh1_dy', 'daughter(0,daughter(1,matchedMC(dy)))')
variables.addAlias('MCT_Kh1_dz', 'daughter(0,daughter(1,matchedMC(dz)))')
variables.addAlias('MCT_Kh1_SOD', 'daughter(0,daughter(1,matchedMC(significanceOfDistance)))')
variables.addAlias('hel_Kh1_px', 'daughter(0,useRestFrame(daughter(1,px)))')
variables.addAlias('hel_Kh1_py', 'daughter(0,useRestFrame(daughter(1,py)))')
variables.addAlias('hel_Kh1_pz', 'daughter(0,useRestFrame(daughter(1,pz)))')
variables.addAlias('hel_Kh1_p', 'daughter(0,useRestFrame(daughter(1,p)))')
variables.addAlias('hel_MCT_Kh1_px', 'daughter(0,useRestFrame(daughter(1,matchedMC(px))))')
variables.addAlias('hel_MCT_Kh1_py', 'daughter(0,useRestFrame(daughter(1,matchedMC(py))))')
variables.addAlias('hel_MCT_Kh1_pz', 'daughter(0,useRestFrame(daughter(1,matchedMC(pz))))')
variables.addAlias('hel_MCT_Kh1_p', 'daughter(0,useRestFrame(daughter(1,matchedMC(p))))')


# Rho variables
variables.addAlias('R_px', 'daughter(1,px)')
variables.addAlias('R_py', 'daughter(1,py)')
variables.addAlias('R_pz', 'daughter(1,pz)')
variables.addAlias('R_pt', 'daughter(1,pt)')
variables.addAlias('R_p', 'daughter(1,p)')
variables.addAlias('R_E', 'daughter(1,E)')
variables.addAlias('R_M', 'daughter(1,M)')
variables.addAlias('R_ErrM', 'daughter(1,ErrM)')
variables.addAlias('R_SigM', 'daughter(1,SigM)')
variables.addAlias('R_charge', 'daughter(1,charge)')
variables.addAlias('R_isSignal', 'daughter(1,isSignal)')
variables.addAlias('R_PID_K_vs_pi', 'daughter(1,K_vs_pi)')
variables.addAlias('R_PID_p_vs_pi', 'daughter(1,p_vs_pi)')
variables.addAlias('R_PID_p_vs_K', 'daughter(1,p_vs_K)')
variables.addAlias('R_PID_muID', 'daughter(1,muIDBelle)')
variables.addAlias('R_PID_eID', 'daughter(1,eIDBelle)')
variables.addAlias('R_dr', 'daughter(1,dr)')
variables.addAlias('R_dx', 'daughter(1,dx)')
variables.addAlias('R_dy', 'daughter(1,dy)')
variables.addAlias('R_dz', 'daughter(1,dz)')
variables.addAlias('R_SOD', 'daughter(1,significanceOfDistance)')
variables.addAlias('MCT_R_px', 'daughter(1,matchedMC(px))')
variables.addAlias('MCT_R_py', 'daughter(1,matchedMC(py))')
variables.addAlias('MCT_R_pz', 'daughter(1,matchedMC(pz))')
variables.addAlias('MCT_R_pt', 'daughter(1,matchedMC(pt))')
variables.addAlias('MCT_R_p', 'daughter(1,matchedMC(p))')
variables.addAlias('MCT_R_E', 'daughter(1,matchedMC(E))')
variables.addAlias('MCT_R_M', 'daughter(1,matchedMC(M))')
variables.addAlias('MCT_R_ErrM', 'daughter(1,matchedMC(ErrM))')
variables.addAlias('MCT_R_SigM', 'daughter(1,matchedMC(SigM))')
variables.addAlias('MCT_R_charge', 'daughter(1,matchedMC(charge))')
variables.addAlias('MCT_R_isSignal', 'daughter(1,matchedMC(isSignal))')
variables.addAlias('MCT_R_mcPDG', 'daughter(1,matchedMC(mcPDG))')
variables.addAlias('MCT_R_PID_K_vs_pi', 'daughter(1,matchedMC(K_vs_pi))')
variables.addAlias('MCT_R_PID_p_vs_pi', 'daughter(1,matchedMC(p_vs_pi))')
variables.addAlias('MCT_R_PID_p_vs_K', 'daughter(1,matchedMC(p_vs_K))')
variables.addAlias('MCT_R_PID_muID', 'daughter(1,matchedMC(muIDBelle))')
variables.addAlias('MCT_R_PID_eID', 'daughter(1,matchedMC(eIDBelle))')
variables.addAlias('MCT_R_dr', 'daughter(1,matchedMC(dr))')
variables.addAlias('MCT_R_dx', 'daughter(1,matchedMC(dx))')
variables.addAlias('MCT_R_dy', 'daughter(1,matchedMC(dy))')
variables.addAlias('MCT_R_dz', 'daughter(1,matchedMC(dz))')
variables.addAlias('MCT_R_SOD', 'daughter(1,matchedMC(significanceOfDistance))')

# Rho variables first daughter
variables.addAlias('Rh0_px', 'daughter(1,daughter(0,px))')
variables.addAlias('Rh0_py', 'daughter(1,daughter(0,py))')
variables.addAlias('Rh0_pz', 'daughter(1,daughter(0,pz))')
variables.addAlias('Rh0_pt', 'daughter(1,daughter(0,pt))')
variables.addAlias('Rh0_p', 'daughter(1,daughter(0,p))')
variables.addAlias('Rh0_E', 'daughter(1,daughter(0,E))')
variables.addAlias('Rh0_M', 'daughter(1,daughter(0,M))')
variables.addAlias('Rh0_ErrM', 'daughter(1,daughter(0,ErrM))')
variables.addAlias('Rh0_SigM', 'daughter(1,daughter(0,SigM))')
variables.addAlias('Rh0_charge', 'daughter(1,daughter(0,charge))')
variables.addAlias('Rh0_isSignal', 'daughter(1,daughter(0,isSignal))')
variables.addAlias('Rh0_PID_K_vs_pi', 'daughter(1,daughter(0,K_vs_pi))')
variables.addAlias('Rh0_PID_p_vs_pi', 'daughter(1,daughter(0,p_vs_pi))')
variables.addAlias('Rh0_PID_p_vs_K', 'daughter(1,daughter(0,p_vs_K))')
variables.addAlias('Rh0_PID_muID', 'daughter(1,daughter(0,muIDBelle))')
variables.addAlias('Rh0_PID_eID', 'daughter(1,daughter(0,eIDBelle))')
variables.addAlias('Rh0_dr', 'daughter(1,daughter(0,dr))')
variables.addAlias('Rh0_dx', 'daughter(1,daughter(0,dx))')
variables.addAlias('Rh0_dy', 'daughter(1,daughter(0,dy))')
variables.addAlias('Rh0_dz', 'daughter(1,daughter(0,dz))')
variables.addAlias('Rh0_SOD', 'daughter(1,daughter(0,significanceOfDistance))')
variables.addAlias('MCT_Rh0_px', 'daughter(1,daughter(0,matchedMC(px)))')
variables.addAlias('MCT_Rh0_py', 'daughter(1,daughter(0,matchedMC(py)))')
variables.addAlias('MCT_Rh0_pz', 'daughter(1,daughter(0,matchedMC(pz)))')
variables.addAlias('MCT_Rh0_pt', 'daughter(1,daughter(0,matchedMC(pt)))')
variables.addAlias('MCT_Rh0_p', 'daughter(1,daughter(0,matchedMC(p)))')
variables.addAlias('MCT_Rh0_E', 'daughter(1,daughter(0,matchedMC(E)))')
variables.addAlias('MCT_Rh0_M', 'daughter(1,daughter(0,matchedMC(M)))')
variables.addAlias('MCT_Rh0_ErrM', 'daughter(1,daughter(0,matchedMC(ErrM)))')
variables.addAlias('MCT_Rh0_SigM', 'daughter(1,daughter(0,matchedMC(SigM)))')
variables.addAlias('MCT_Rh0_charge', 'daughter(1,daughter(0,matchedMC(charge)))')
variables.addAlias('MCT_Rh0_isSignal', 'daughter(1,daughter(0,matchedMC(isSignal)))')
variables.addAlias('MCT_Rh0_mcPDG', 'daughter(1,daughter(0,matchedMC(mcPDG)))')
variables.addAlias('MCT_Rh0_PID_K_vs_pi', 'daughter(1,daughter(0,matchedMC(K_vs_pi)))')
variables.addAlias('MCT_Rh0_PID_p_vs_pi', 'daughter(1,daughter(0,matchedMC(p_vs_pi)))')
variables.addAlias('MCT_Rh0_PID_p_vs_K', 'daughter(1,daughter(0,matchedMC(p_vs_K)))')
variables.addAlias('MCT_Rh0_PID_muID', 'daughter(1,daughter(0,matchedMC(muIDBelle)))')
variables.addAlias('MCT_Rh0_PID_eID', 'daughter(1,daughter(0,matchedMC(eIDBelle)))')
variables.addAlias('MCT_Rh0_dr', 'daughter(1,daughter(0,matchedMC(dr)))')
variables.addAlias('MCT_Rh0_dx', 'daughter(1,daughter(0,matchedMC(dx)))')
variables.addAlias('MCT_Rh0_dy', 'daughter(1,daughter(0,matchedMC(dy)))')
variables.addAlias('MCT_Rh0_dz', 'daughter(1,daughter(0,matchedMC(dz)))')
variables.addAlias('MCT_Rh0_SOD', 'daughter(1,daughter(0,matchedMC(significanceOfDistance)))')
variables.addAlias('hel_Rh0_px', 'daughter(1,useRestFrame(daughter(0,px)))')
variables.addAlias('hel_Rh0_py', 'daughter(1,useRestFrame(daughter(0,py)))')
variables.addAlias('hel_Rh0_pz', 'daughter(1,useRestFrame(daughter(0,pz)))')
variables.addAlias('hel_Rh0_p', 'daughter(1,useRestFrame(daughter(0,p)))')
variables.addAlias('hel_MCT_Rh0_px', 'daughter(1,useRestFrame(daughter(0,matchedMC(px))))')
variables.addAlias('hel_MCT_Rh0_py', 'daughter(1,useRestFrame(daughter(0,matchedMC(py))))')
variables.addAlias('hel_MCT_Rh0_pz', 'daughter(1,useRestFrame(daughter(0,matchedMC(pz))))')
variables.addAlias('hel_MCT_Rh0_p', 'daughter(1,useRestFrame(daughter(0,matchedMC(p))))')


# Rho variables second daughter
variables.addAlias('Rh1_px', 'daughter(1,daughter(1,px))')
variables.addAlias('Rh1_py', 'daughter(1,daughter(1,py))')
variables.addAlias('Rh1_pz', 'daughter(1,daughter(1,pz))')
variables.addAlias('Rh1_pt', 'daughter(1,daughter(1,pt))')
variables.addAlias('Rh1_p', 'daughter(1,daughter(1,p))')
variables.addAlias('Rh1_E', 'daughter(1,daughter(1,E))')
variables.addAlias('Rh1_M', 'daughter(1,daughter(1,M))')
variables.addAlias('Rh1_ErrM', 'daughter(1,daughter(1,ErrM))')
variables.addAlias('Rh1_SigM', 'daughter(1,daughter(1,SigM))')
variables.addAlias('Rh1_charge', 'daughter(1,daughter(1,charge))')
variables.addAlias('Rh1_isSignal', 'daughter(1,daughter(1,isSignal))')
variables.addAlias('Rh1_PID_K_vs_pi', 'daughter(1,daughter(1,K_vs_pi))')
variables.addAlias('Rh1_PID_p_vs_pi', 'daughter(1,daughter(1,p_vs_pi))')
variables.addAlias('Rh1_PID_p_vs_K', 'daughter(1,daughter(1,p_vs_K))')
variables.addAlias('Rh1_PID_muID', 'daughter(1,daughter(1,muIDBelle))')
variables.addAlias('Rh1_PID_eID', 'daughter(1,daughter(1,eIDBelle))')
variables.addAlias('Rh1_dr', 'daughter(1,daughter(1,dr))')
variables.addAlias('Rh1_dx', 'daughter(1,daughter(1,dx))')
variables.addAlias('Rh1_dy', 'daughter(1,daughter(1,dy))')
variables.addAlias('Rh1_dz', 'daughter(1,daughter(1,dz))')
variables.addAlias('Rh1_SOD', 'daughter(1,daughter(1,significanceOfDistance))')
variables.addAlias('MCT_Rh1_px', 'daughter(1,daughter(1,matchedMC(px)))')
variables.addAlias('MCT_Rh1_py', 'daughter(1,daughter(1,matchedMC(py)))')
variables.addAlias('MCT_Rh1_pz', 'daughter(1,daughter(1,matchedMC(pz)))')
variables.addAlias('MCT_Rh1_pt', 'daughter(1,daughter(1,matchedMC(pt)))')
variables.addAlias('MCT_Rh1_p', 'daughter(1,daughter(1,matchedMC(p)))')
variables.addAlias('MCT_Rh1_E', 'daughter(1,daughter(1,matchedMC(E)))')
variables.addAlias('MCT_Rh1_M', 'daughter(1,daughter(1,matchedMC(M)))')
variables.addAlias('MCT_Rh1_ErrM', 'daughter(1,daughter(1,matchedMC(ErrM)))')
variables.addAlias('MCT_Rh1_SigM', 'daughter(1,daughter(1,matchedMC(SigM)))')
variables.addAlias('MCT_Rh1_charge', 'daughter(1,daughter(1,matchedMC(charge)))')
variables.addAlias('MCT_Rh1_isSignal', 'daughter(1,daughter(1,matchedMC(isSignal)))')
variables.addAlias('MCT_Rh1_mcPDG', 'daughter(1,daughter(1,matchedMC(mcPDG)))')
variables.addAlias('MCT_Rh1_PID_K_vs_pi', 'daughter(1,daughter(1,matchedMC(K_vs_pi)))')
variables.addAlias('MCT_Rh1_PID_p_vs_pi', 'daughter(1,daughter(1,matchedMC(p_vs_pi)))')
variables.addAlias('MCT_Rh1_PID_p_vs_K', 'daughter(1,daughter(1,matchedMC(p_vs_K)))')
variables.addAlias('MCT_Rh1_PID_muID', 'daughter(1,daughter(1,matchedMC(muIDBelle)))')
variables.addAlias('MCT_Rh1_PID_eID', 'daughter(1,daughter(1,matchedMC(eIDBelle)))')
variables.addAlias('MCT_Rh1_dr', 'daughter(1,daughter(1,matchedMC(dr)))')
variables.addAlias('MCT_Rh1_dx', 'daughter(1,daughter(1,matchedMC(dx)))')
variables.addAlias('MCT_Rh1_dy', 'daughter(1,daughter(1,matchedMC(dy)))')
variables.addAlias('MCT_Rh1_dz', 'daughter(1,daughter(1,matchedMC(dz)))')
variables.addAlias('MCT_Rh1_SOD', 'daughter(1,daughter(1,matchedMC(significanceOfDistance)))')
variables.addAlias('hel_Rh1_px', 'daughter(1,useRestFrame(daughter(1,px)))')
variables.addAlias('hel_Rh1_py', 'daughter(1,useRestFrame(daughter(1,py)))')
variables.addAlias('hel_Rh1_pz', 'daughter(1,useRestFrame(daughter(1,pz)))')
variables.addAlias('hel_Rh1_p', 'daughter(1,useRestFrame(daughter(1,p)))')
variables.addAlias('hel_MCT_Rh1_px', 'daughter(1,useRestFrame(daughter(1,matchedMC(px))))')
variables.addAlias('hel_MCT_Rh1_py', 'daughter(1,useRestFrame(daughter(1,matchedMC(py))))')
variables.addAlias('hel_MCT_Rh1_pz', 'daughter(1,useRestFrame(daughter(1,matchedMC(pz))))')
variables.addAlias('hel_MCT_Rh1_p', 'daughter(1,useRestFrame(daughter(1,matchedMC(p))))')


# Helicity variables
variables.addAlias('minus_K_P1P2', 'formula(hel_Kh1_px*K_px + hel_Kh1_py*K_py + hel_Kh1_pz*K_pz)')
variables.addAlias('K_P1P2', 'formula(0 - minus_K_P1P2)')
variables.addAlias('K_PP', 'formula(K_p*hel_Kh1_p)')
variables.addAlias('helK', 'formula( K_P1P2/K_PP )')
variables.addAlias('minus_R_P1P2', 'formula(hel_Rh1_px*R_px + hel_Rh1_py*R_py + hel_Rh1_pz*R_pz)')
variables.addAlias('R_P1P2', 'formula(0 - minus_R_P1P2)')
variables.addAlias('R_PP', 'formula(R_p*hel_Rh1_p)')
variables.addAlias('helR', 'formula( R_P1P2/R_PP )')
variables.addAlias('minus_MCT_K_P1P2', 'formula(hel_MCT_Kh1_px*MCT_K_px + hel_MCT_Kh1_py*MCT_K_py + hel_MCT_Kh1_pz*MCT_K_pz)')
variables.addAlias('MCT_K_P1P2', 'formula(0 - minus_MCT_K_P1P2)')
variables.addAlias('MCT_K_PP', 'formula(MCT_K_p*hel_MCT_Kh1_p)')
variables.addAlias('MCT_helK', 'formula( MCT_K_P1P2/MCT_K_PP )')
variables.addAlias('minus_MCT_R_P1P2', 'formula(hel_MCT_Rh1_px*MCT_R_px + hel_MCT_Rh1_py*MCT_R_py + hel_MCT_Rh1_pz*MCT_R_pz)')
variables.addAlias('MCT_R_P1P2', 'formula(0 - minus_MCT_R_P1P2)')
variables.addAlias('MCT_R_PP', 'formula(MCT_R_p*hel_MCT_Rh1_p)')
variables.addAlias('MCT_helR', 'formula( MCT_R_P1P2/MCT_R_PP )')


# pi0 variables
variables.addAlias('g0_E', 'daughter(0,daughter(1,daughter(0,E)))')
variables.addAlias('g1_E', 'daughter(0,daughter(1,daughter(1,E)))')
variables.addAlias('g0_p', 'daughter(0,daughter(1,daughter(0,p)))')
variables.addAlias('g0_px', 'daughter(0,daughter(1,daughter(0,px)))')
variables.addAlias('g0_py', 'daughter(0,daughter(1,daughter(0,py)))')
variables.addAlias('g0_pz', 'daughter(0,daughter(1,daughter(0,pz)))')
variables.addAlias('g0_pt', 'daughter(0,daughter(1,daughter(0,pt)))')
variables.addAlias('g1_p', 'daughter(0,daughter(1,daughter(1,p)))')
variables.addAlias('g1_px', 'daughter(0,daughter(1,daughter(1,px)))')
variables.addAlias('g1_py', 'daughter(0,daughter(1,daughter(1,py)))')
variables.addAlias('g1_pz', 'daughter(0,daughter(1,daughter(1,pz)))')
variables.addAlias('g1_pt', 'daughter(0,daughter(1,daughter(1,pt)))')
variables.addAlias('g0_cosTheta', 'daughter(0,daughter(1,daughter(0,cosTheta)))')
variables.addAlias('g1_cosTheta', 'daughter(0,daughter(1,daughter(1,cosTheta)))')
variables.addAlias('MCT_g0_E', 'daughter(0,daughter(1,daughter(0,matchedMC(E))))')
variables.addAlias('MCT_g1_E', 'daughter(0,daughter(1,daughter(1,matchedMC(E))))')
variables.addAlias('MCT_g0_p', 'daughter(0,daughter(1,daughter(0,matchedMC(p))))')
variables.addAlias('MCT_g0_px', 'daughter(0,daughter(1,daughter(0,matchedMC(px))))')
variables.addAlias('MCT_g0_py', 'daughter(0,daughter(1,daughter(0,matchedMC(py))))')
variables.addAlias('MCT_g0_pz', 'daughter(0,daughter(1,daughter(0,matchedMC(pz))))')
variables.addAlias('MCT_g0_pt', 'daughter(0,daughter(1,daughter(0,matchedMC(pt))))')
variables.addAlias('MCT_g1_p', 'daughter(0,daughter(1,daughter(1,matchedMC(p))))')
variables.addAlias('MCT_g1_px', 'daughter(0,daughter(1,daughter(1,matchedMC(px))))')
variables.addAlias('MCT_g1_py', 'daughter(0,daughter(1,daughter(1,matchedMC(py))))')
variables.addAlias('MCT_g1_pz', 'daughter(0,daughter(1,daughter(1,matchedMC(pz))))')
variables.addAlias('MCT_g1_pt', 'daughter(0,daughter(1,daughter(1,matchedMC(pt))))')
variables.addAlias('MCT_g0_cosTheta', 'daughter(0,daughter(1,daughter(0,matchedMC(cosTheta))))')
variables.addAlias('MCT_g1_cosTheta', 'daughter(0,daughter(1,daughter(1,matchedMC(cosTheta))))')

# K0s variables
variables.addAlias('K0s_dr', 'daughter(0,daughter(0,dr))')
variables.addAlias('K0s_hel', 'daughter(0,daughter(0,daughterAngle(0,1)))')
variables.addAlias('K0s_SoD', 'daughter(0,daughter(0,significanceOfDistance))')
variables.addAlias('K0s_goodKs', 'daughter(0,daughter(0,extraInfo(goodKs)))')
variables.addAlias('K0s_ksnbVLike', 'daughter(0,daughter(0,extraInfo(ksnbVLike)))')
variables.addAlias('K0s_ksnbNoLam', 'daughter(0,daughter(0,extraInfo(ksnbNoLam)))')
variables.addAlias('K0s_ksnbStandard', 'daughter(0,daughter(0,extraInfo(ksnbStandard)))')
variables.addAlias('MCT_K0s_dr', 'daughter(0,daughter(0,matchedMC(dr)))')
variables.addAlias('MCT_K0s_hel', 'daughter(0,daughter(0,matchedMC(daughterAngle(0,1))))')
variables.addAlias('MCT_K0s_SoD', 'daughter(0,daughter(0,matchedMC(significanceOfDistance)))')
variables.addAlias('MCT_K0s_goodKs', 'daughter(0,daughter(0,matchedMC(extraInfo(goodKs))))')
variables.addAlias('MCT_K0s_ksnbVLike', 'daughter(0,daughter(0,matchedMC(extraInfo(ksnbVLike))))')
variables.addAlias('MCT_K0s_ksnbNoLam', 'daughter(0,daughter(0,matchedMC(extraInfo(ksnbNoLam))))')
variables.addAlias('MCT_K0s_ksnbStandard', 'daughter(0,daughter(0,matchedMC(extraInfo(ksnbStandard))))')

# Swaps
# K*
variables.addAlias('fakeK_px_0', 'formula(Rh0_px+Kh0_px)')
variables.addAlias('fakeK_py_0', 'formula(Rh0_py+Kh0_py)')
variables.addAlias('fakeK_pz_0', 'formula(Rh0_pz+Kh0_pz)')
variables.addAlias('fakeK_E_0', 'formula(Rh0_E+Kh0_E)')
variables.addAlias(
    'fakeK_M2_0',
    'formula(fakeK_E_0*fakeK_E_0 - fakeK_px_0*fakeK_px_0 - fakeK_py_0*fakeK_py_0 - fakeK_pz_0*fakeK_pz_0)')
variables.addAlias('M_Rh0_Kh0', 'formula(fakeK_M2_0^0.5)')
variables.addAlias('charge_Rh0_Kh0', 'formula(Rh0_charge+Kh0_charge)')
variables.addAlias('fakeK_px_1', 'formula(Rh1_px+Kh0_px)')
variables.addAlias('fakeK_py_1', 'formula(Rh1_py+Kh0_py)')
variables.addAlias('fakeK_pz_1', 'formula(Rh1_pz+Kh0_pz)')
variables.addAlias('fakeK_E_1', 'formula(Rh1_E+Kh0_E)')
variables.addAlias(
    'fakeK_M2_1',
    'formula(fakeK_E_1*fakeK_E_1 - fakeK_px_1*fakeK_px_1 - fakeK_py_1*fakeK_py_1 - fakeK_pz_1*fakeK_pz_1)')
variables.addAlias('M_Rh1_Kh0', 'formula(fakeK_M2_1^0.5)')
variables.addAlias('charge_Rh1_Kh0', 'formula(Rh1_charge+Kh0_charge)')
variables.addAlias('fakeK_chargediff_0', 'abs(formula(Rh0_charge-Kh0_charge))')
variables.addAlias('fakeK_rightcharge_0', 'abs(formula(K_charge+Rh0_charge))')
variables.addAlias('fakeK_chargediff_1', 'abs(formula(Rh1_charge-Kh0_charge))')
variables.addAlias('fakeK_rightcharge_1', 'abs(formula(K_charge+Rh1_charge))')
variables.addAlias('fakeK_fromK0st_M2', 'formula(fakeK_chargediff_0*fakeK_M2_0/2+fakeK_chargediff_1*fakeK_M2_1/2)')
variables.addAlias('fakeK_fromSwap_M2', 'formula(fakeK_rightcharge_0*fakeK_M2_0/2+fakeK_rightcharge_1*fakeK_M2_1/2)')
variables.addAlias('Kpi0fakeK_M', 'formula(fakeK_fromK0st_M2^0.5)')
variables.addAlias('K0spifakeK_M', 'formula(fakeK_fromSwap_M2^0.5)')

# Eta'
variables.addAlias('fakeEtap_px', 'formula(Rh0_px+Rh1_px+Kh1_px)')
variables.addAlias('fakeEtap_py', 'formula(Rh0_py+Rh1_py+Kh1_py)')
variables.addAlias('fakeEtap_pz', 'formula(Rh0_pz+Rh1_pz+Kh1_pz)')
variables.addAlias('fakeEtap_E', 'formula(Rh0_E+Rh1_E+Kh1_E)')
variables.addAlias(
    'fakeEtap_M2',
    'formula(fakeEtap_E*fakeEtap_E - fakeEtap_px*fakeEtap_px - fakeEtap_py*fakeEtap_py - fakeEtap_pz*fakeEtap_pz)')
variables.addAlias('M_3pi', 'formula(fakeEtap_M2^0.5)')

# D0
variables.addAlias('Rh0_OppCharge', 'abs(formula(Rh0_charge+charge))')
variables.addAlias('Rh1_OppCharge', 'abs(formula(Rh1_charge+charge))')
variables.addAlias('fakeD_px_0', 'formula(Rh0_OppCharge*Rh0_px/2+Rh1_OppCharge*Rh1_px/2+Kh0_px+Kh0_px)')
variables.addAlias('fakeD_py_0', 'formula(Rh0_OppCharge*Rh0_py/2+Rh1_OppCharge*Rh1_py/2+Kh0_py+Kh0_py)')
variables.addAlias('fakeD_pz_0', 'formula(Rh0_OppCharge*Rh0_pz/2+Rh1_OppCharge*Rh1_pz/2+Kh0_pz+Kh0_pz)')
variables.addAlias('fakeD_E_0', 'formula(Rh0_OppCharge*Rh0_E/2+Rh1_OppCharge*Rh1_E/2+Kh0_E+Kh0_E)')
variables.addAlias(
    'fakeD_M2_0',
    'formula(fakeD_E_0*fakeD_E_0 - fakeD_px_0*fakeD_px_0 - fakeD_py_0*fakeD_py_0 - fakeD_pz_0*fakeD_pz_0)')
variables.addAlias('Kpi0fakeD_M', 'formula(fakeD_M2_0^0.5)')
variables.addAlias('fakeD_px_1', 'formula(Rh0_px+Rh1_px+Kh0_px)')
variables.addAlias('fakeD_py_1', 'formula(Rh0_py+Rh1_py+Kh0_py)')
variables.addAlias('fakeD_pz_1', 'formula(Rh0_pz+Rh1_pz+Kh0_pz)')
variables.addAlias('fakeD_E_1', 'formula(Rh0_E+Rh1_E+Kh0_E)')
variables.addAlias(
    'fakeD_M2_1',
    'formula(fakeD_E_1*fakeD_E_1 - fakeD_px_1*fakeD_px_1 - fakeD_py_1*fakeD_py_1 - fakeD_pz_1*fakeD_pz_1)')
variables.addAlias('K0spifakeD_M', 'formula(fakeD_M2_1^0.5)')
