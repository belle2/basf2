#!/usr/bin/env python
# -*- coding: utf-8 -*-

from basf2 import *
from fei import *
import glob

chargedTrackVars = [
    'eid',
    'eid_dEdx',
    'eid_TOP',
    'eid_ARICH',
    'eid_ECL',
    'Kid',
    'Kid_dEdx',
    'Kid_TOP',
    'Kid_ARICH',
    'prid',
    'prid_dEdx',
    'prid_TOP',
    'prid_ARICH',
    'muid',
    'muid_dEdx',
    'muid_TOP',
    'muid_ARICH',
    'p',
    'pt',
    'chiProb']

mvaConfig_chargedFSP = MVAConfiguration(
    #name='NeuroBayes', type='Plugin', config='!H:V:CreateMVAPdfs:NtrainingIter=0:Preprocessing=122:ShapeTreat=DIAG:TrainingMethod=BFGS',
    name='FastBDT', type='Plugin', config='!H:CreateMVAPdfs:!V:NTrees=100:Shrinkage=0.10:RandRatio=0.5:NCutLevel=8:NTreeLayers=3',
    variables=chargedTrackVars,
    target='isSignal',
    model=None
)


particles = []
particles.append(Particle('pi+', mvaConfig_chargedFSP))
particles.append(Particle('K+', mvaConfig_chargedFSP))


feistate = fullEventInterpretation(None, particles)

if feistate.is_trained:
    feistate.path.add_module('RootOutput', outputFileName='analysisPathDone.root', ignoreCommandLineOverride=True)
else:
    feistate.path.add_module('RootOutput')


# show constructed path
print feistate.path

if len(glob.glob('FEIsummary.tex')) == 0:
    process(feistate.path)

print statistics
