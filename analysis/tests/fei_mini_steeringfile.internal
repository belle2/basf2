#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Thomas Keck 2014

from FullEventInterpretation import *
from basf2 import *

chargedTrackVars = [
    'eid',
    'eid_dEdx',
    'eid_TOP',
    'eid_ARICH',
    'eid_ECL',
    'Kid',
    'Kid_dEdx',
    'Kid_TOP',
    'Kid_ARICH',
    'prid',
    'prid_dEdx',
    'prid_TOP',
    'prid_ARICH',
    'muid',
    'muid_dEdx',
    'muid_TOP',
    'muid_ARICH',
    'p',
    'pt',
    'chiProb']

mvaConfig_chargedFSP = Particle.MVAConfiguration(
    #name='NeuroBayes', type='Plugin', config='!H:V:CreateMVAPdfs:NtrainingIter=0:Preprocessing=122:ShapeTreat=DIAG:TrainingMethod=BFGS',
    name='FastBDT', type='Plugin', config='!H:CreateMVAPdfs:!V:NTrees=100:Shrinkage=0.10:RandRatio=0.5:NCutLevel=8:NTreeLayers=3',
    variables=chargedTrackVars,
    target='isSignal'
)

mvaConfig_D = Particle.MVAConfiguration(
    name='FastBDT', type='Plugin', config='!H:CreateMVAPdfs:!V:NTrees=100:Shrinkage=0.10:RandRatio=0.5:NCutLevel=8:NTreeLayers=3',
    #name='NeuroBayes', type='Plugin', config='!H:V:CreateMVAPdfs:NtrainingIter=0:Preprocessing=122:ShapeTreat=DIAG:TrainingMethod=BFGS',
    variables=['daughterProductOf(getExtraInfo(SignalProbability))', 'daughterAngle(0, 1)', 'p', 'pt', 'M', 'dr', 'dz', 'distance', 'significanceOfDistance', 'chiProb'],
    target='isSignal'
)

mvaConfig_B = Particle.MVAConfiguration(
    name='FastBDT', type='Plugin', config='!H:CreateMVAPdfs:!V:NTrees=100:Shrinkage=0.10:RandRatio=0.5:NCutLevel=8:NTreeLayers=3',
    #name='NeuroBayes', type='Plugin', config='!H:V:CreateMVAPdfs:NtrainingIter=0:Preprocessing=122:ShapeTreat=DIAG:TrainingMethod=BFGS',
    #variables=['daughterProductOf(getExtraInfo(SignalProbability))', 'deltaE'],
    variables=['daughterProductOf(getExtraInfo(SignalProbability))', 'deltaE', 'daughterAngle(0, 1)', 'dr', 'dz', 'distance', 'significanceOfDistance', 'chiProb'],
    target='isSignal'
)

# no cuts on network for B!
postCutConfig_B = Particle.PostCutConfiguration(value=0.0)


preCutConfiguration_nonFSP = Particle.PreCutConfiguration(
    #variable='daughterProductOfSignalProbability',
    variable='M',
    binning=(500, 0.0, 6.0),
    efficiency=0.8,
    purity=0.0001,
    userCut=''
)
preCutConfiguration_B = Particle.PreCutConfiguration(
    #variable='M', # this is not a good idea because it may enhance BG in signal region (in M_bc)
    variable='daughterProductOf(getExtraInfo(SignalProbability))',
    binning=(500, 0.0, 6.0),
    efficiency=0.8,
    purity=0.00001,
    userCut=''
)


particles = []
particles.append(Particle('pi+', mvaConfig_chargedFSP))
particles.append(Particle('K+', mvaConfig_chargedFSP))


p = Particle('D0', mvaConfig_D, preCutConfiguration_nonFSP)
p.addChannel(['K-', 'pi+'])
particles.append(p)

analysis_path = create_path()
analysis_path.add_module(register_module('PrintCollections'))
main = FullEventInterpretation(None, analysis_path, particles)

# show constructed path
print main

process(main)

print statistics
