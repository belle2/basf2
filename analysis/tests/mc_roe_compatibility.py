#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
This is a log-type unit test of the ROE made out of MCParticles.
It runs over a mdst file which contains two muons, converted gamma, K_S0 and Lambda0.
It uses a muon as a signal side, so ROE should contain only 3 V0 objects + a muon.
The mdst file was generated by scripts in the external repository:
https://stash.desy.de/projects/B2A/repos/roe-unittest-mc/browse
There is no larger equivalent of this test.
"""

import b2test_utils
from basf2 import set_random_seed, create_path, process

# make logging more reproducible by replacing some strings
b2test_utils.configure_logging_for_tests()
set_random_seed("1337")
testinput = [b2test_utils.require_file('analysis/tests/pgun-roe-mdst.root')]
fsps = ['mu+', 'K_S0', 'Lambda0', 'gamma']
###############################################################################
# a new ParticleLoader for each fsp
testpath = create_path()
testpath.add_module('RootInput', inputFileNames=testinput)
for fsp in fsps:
    testpath.add_module('ParticleLoader',
                        decayStringsWithCuts=[(fsp, 'mcPrimary > 0')],
                        addDaughters=True, skipNonPrimaryDaughters=True, useMCParticles=True)
signal_side_name = 'B0'
testpath.add_module('ParticleCombiner',
                    decayString=signal_side_name+' -> mu+ mu-',
                    cut='')
testpath.add_module('ParticlePrinter',
                    listName='mu+')

testpath.add_module('RestOfEventBuilder', particleList=signal_side_name,
                    particleListsInput=fsps, fromMC=True)
###############################################################################
roe_path = create_path()
roe_path.add_module('RestOfEventPrinter',
                    unpackComposites=False,
                    fullPrint=False)
testpath.for_each('RestOfEvent', 'RestOfEvents', path=roe_path)
###############################################################################
process(testpath, 2)
