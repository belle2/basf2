Description of available ARICH example scripts

--------------
particleGun.py
--------------

Simulates and reconstructs 1000 K,pi tracks hitting ARICH. PXD,SVD,CDC and ARICH detectors are included into simulation/reconstruction (so this is basically full detector simulation, as outer detectors have no effect on ARICH performance). 

The output of script is a root file (by default named "ARICHEvents.root") which contains flat ntuple generated by ARICHNtuple module. In this ntuple all information needed for detector performance studies is available. 

For the content of ntuple see the ntuple itself, or for more information "arich/modules/arichNtuple/src/ARICHNtupleModule.cc", where the ntuple is generated. 

An an example of how to produce performance plots from the ntuple can be found at "arich/utility/scripts/plotEfficiency.C"
(also executed by default by particleGun.py)

------------------
ARICHStandAlone.py 
------------------

Stand-alone simulation and reconstruction of ARICH detector (no other detectors included). The simulation is much,much faster than full detector simulation, so it is useful for large statistics studies of ARICH detector (reconstruction algorithm, geometry effects, etc..). One has to be aware that in this case the track information (position and direction at aerogel plane) is taken from MC (and not from reconstructed tracks), and smeared to mimic tracking resolution. However, a simple Gaussian smearing is done, which can lead to significant differences in performance of stand-alone and full detector simulations (especially at low fake rates, due to very badly reconstructed tracks which are not reproduced by Gaussian smearing). With this in mind, stand-alone simulation is very useful at least for the start of your studies, as it enables very large statistics sample in short time. 

ARICHStandAlone.py by default generates and reconstructs 1000 particle gun events (pi and K). 
The output of script is again ntuple from ARICHNtuple module (see previous example). 
  
---------------------------------------------
evtgen_gen.py | evtgen_sim.py | evtgen_rec.py
---------------------------------------------

This example demonstrates how to generate BB events (evtgen_gen.py), run the simulation of generated events (evtgen_sim.py), and perform reconstruction (evtgen_rec.py).

Separation into three parts is done for practical reason. For example, if you want to study the reconstruction method, you first generate and simulate events, store the output in root files, and then study reconstruction on these events (obviously it is impractical to run simulation, which takes ages, over and over again if you study the effect of some change in reconstruction).

Finally the output of evtgen_rec.py is again root file with ntuple from ARICHNtuple module.

----------------------
ARICHCosmicTestData.py   
----------------------

Generates occupancy plots and runs event display for cosmic test events (from August 2016, 6 HAPDs).
Before using please run "arich/utility/scripts/downloadCosmicTest.py". This will download database payloads with 
the cosmic test geometry configuration and few files of cosmic test raw data.

----------------------
ARICHCosmicTestSim.py   
----------------------

Example of cosmic test simulation (with cosmics test geometry configuration). In the example a particle gun is used to generate
particles. For more serious study use cosmic ray generators (generators/cry).