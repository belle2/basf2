#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Lists details about the available prompt calibration scripts to save some time.
"""

import ROOT
ROOT.PyConfig.IgnoreCommandLineOptions = True

import basf2
from basf2 import B2ERROR, B2INFO, B2WARNING
import json
from pathlib import Path

from prompt import prompt_script_package, prompt_script_dir 

def get_all_script_paths():
    script_path = Path(basf2.find_file(prompt_script_dir))
    return script_path.glob("*.py")


def get_script_settings(name):
    import importlib
    cal_module = importlib.import_module(prompt_script_package + name.rstrip(".py"))
    return cal_module.settings


def get_argparser():
    """Setup the argparser for this command line tool"""
    import argparse
    parser = argparse.ArgumentParser(formatter_class=argparse.RawTextHelpFormatter,
                                     description="Prints details about the available prompt calibration scripts."
                                    )
    parser.add_argument("--script-name", dest="script_name", metavar="",
                        help="The script to print details about. If this is not given, a list of available scripts "
                             "will instead be printed."
                       )
    parser.add_argument("--json", dest="json", action="store_true",
                        help="Script details will be printed as a JSON string instead of nice stdout."
                       )
    parser.set_defaults(json=False)

    parser.add_argument("--check", dest="check", action="store_true",
                        help="A check will be made to see if there are duplicate CalibrationSettings 'name' values. "
                             "Script will exit early and with return code=1 if there are."
                       )
    parser.set_defaults(check=False)

    return parser


def main():
    parser = get_argparser()
    args = parser.parse_args()
    if args.check:
        all_script_paths = [p.name for p in get_all_script_paths()]
        calibration_names = [get_script_settings(script_path).name for script_path in all_script_paths]
        if len(calibration_names) != len(set(calibration_names)):
            B2WARNING("Duplicate calibration name(s) found in settings!!!")
            from collections import Counter
            c = Counter(calibration_names)
            for name, count in c.items():
                if count > 1:
                    print(f"{name} was used {count} times in the prompt scripts.")
            return 1

    if not args.script_name:
        all_script_paths = [p.name for p in get_all_script_paths()]
        if args.json:
            print(json.dumps(all_script_paths))
        else:
            print("All available prompt calibration scripts (for usage in b2caf-prompt-run input config file):")
            for script_path in all_script_paths:
                print(script_path)
    else:
        settings = get_script_settings(args.script_name)
        if args.json:
            print(settings.json_dumps())
        else:
            print(f"Details for {args.script_name}")
            print(settings)
    return 0


if __name__ == "__main__":
    import sys
    sys.exit(main())
