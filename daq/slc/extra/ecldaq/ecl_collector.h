#ifndef _ECL_COLLECTOR_H
#define _ECL_COLLECTOR_H

#define _ECL_SHAPER_DSPB_FIRMWARE_FILE_LEN 651848
#define _ECL_SHAPER_DSPB_ECLDSP_FILE_LEN 32256


#define _ECL_COLLECTOR_REG_TKN_WRITE 0x0010
#define _ECL_COLLECTOR_REG_TKN_WRITE_SH_NUM_POS 12
#define _ECL_COLLECTOR_REG_TKN_WRITE_REG_NUM_POS 8
#define _ECL_COLLECTOR_REG_TKN_WRITE_DATA_POS 0

#define _ECL_COLLECTOR_REG_TKN_WRITE_REG_NUM_CONF_IO 0

#define _ECL_COLLECTOR_REG_TKN_WRITE_CCLK   0x0001
#define _ECL_COLLECTOR_REG_TKN_WRITE_DIN    0x0002
#define _ECL_COLLECTOR_REG_TKN_WRITE_PROG_B 0x0004

#define _ECL_COLLECTOR_REG_TKN_WRITE_REG_NUM_CONF_BYTE 1

#define _ECL_COLLECTOR_REG_TKN_BURST 0x0011
#define _ECL_COLLECTOR_REG_TKN_BURST_SH_NUM_POS 12
#define _ECL_COLLECTOR_REG_TKN_BURST_LEN_POS     0

#define _ECL_COLLECTOR_REG_DL_LOCKED 0x0022

#define _ECL_COLLECTOR_REG_DL_REG_RW_SH_NUM    0x0030
#define _ECL_COLLECTOR_REG_DL_REG_RW_REG_NUM   0x0031
#define _ECL_COLLECTOR_REG_DL_REG_RW_REG_WDATA 0x0032
#define _ECL_COLLECTOR_REG_DL_REG_RW_CMD       0x0033
#define _ECL_COLLECTOR_REG_DL_REG_RW_CMD_READ_POS  0
#define _ECL_COLLECTOR_REG_DL_REG_RW_CMD_WRITE_POS 1

#define _ECL_COLLECTOR_REG_DL_NEXT_PCT_BASE 0x0040
#define _ECL_COLLECTOR_REG_DL_REF_PCT_BASE  0x0050
#define _ECL_COLLECTOR_REG_DL_READ_PEND     0x0060

#define _ECL_COLLECTOR_REG_LAST_TRG_TAG 0x0071

#define _ECL_COLLECTOR_REG_TRG_FRC_CMD  0x0072

#define _ECL_COLLECTOR_REG_TRG_ARM_TRG_CMD 0x0073

#define _ECL_COLLECTOR_REG_CALIB_MODE    0x0080
#define _ECL_COLLECTOR_REG_CALIB_MODE_STEP_PULSE 0x20

#define _ECL_COLLECTOR_REG_CALIB_FACTOR  0x0090

#define _ECL_COLLECTOR_REG_CALIB_DELAY  0x0091

#define _ECL_COLLECTOR_REG_MEM_IO_SH_NUM   0x00A0
#define _ECL_COLLECTOR_REG_SDRAM_ROW       0x00A1
#define _ECL_COLLECTOR_REG_SDRAM_CHIP_BANK 0x00A2
#define _ECL_COLLECTOR_REG_SDRAM_COL_HIGH  0x00A3

#define _ECL_COLLECTOR_REG_DSP_MEM_TYPE 0x00A4
#define _ECL_COLLECTOR_DSP_MEM_TYPE_HIT_THRESHOLD 0
#define _ECL_COLLECTOR_DSP_MEM_TYPE_SKIP_AMPL     1
#define _ECL_COLLECTOR_DSP_MEM_TYPE_LOW_AMPL      2



#define _ECL_COLLECTOR_REG_STATUS 0x8000

#define _ECL_COLLECTOR_REG_COMMAND 0xC000
#define _ECL_COLLECTOR_REG_COMMAND_RESET_DAC     0x0001
#define _ECL_COLLECTOR_REG_COMMAND_EXT_TRG_ABORT 0x0002
#define _ECL_COLLECTOR_REG_COMMAND_READ_SDRAM    0x0004
#define _ECL_COLLECTOR_REG_COMMAND_WRITE_SDRAM   0x0008
#define _ECL_COLLECTOR_REG_COMMAND_READ_DSP_MEM  0x0010
#define _ECL_COLLECTOR_REG_COMMAND_WRITE_DSP_MEM 0x0020

#define _ECL_COLLECTOR_REG_ID 0xFFF0
#define _ECL_COLLECTOR_ID 0xC011

#define _ECL_COLLECTOR_REG_HW_VER 0xFFF1
#define _ECL_COLLECTOR_REG_FW_VER 0xFFF2

#define _ECL_COLLECTOR_MEM_TKN_BURST_BUFFER 0x00010000

#define _ECL_COLLECTOR_MEM_DSR_BUFFER_BASE      0x00200000
#define _ECL_COLLECTOR_MEM_DSP_BUFFER_SH_OFFSET 0x00010000

#define _ECL_COLLECTOR_MEM_BUF_MEM_IO_BASE      0x00300000
#define _ECL_COLLECTOR_MEM_BUF_MEM_IO_SH_OFFSET 0x00001000

struct {
  int adc_sample_num;
  int adc_channel_num;
  int adc_mask;
  int dsp_mask;

  int adc_data[1024];// ADC data, channel N starts with N*64 offset
  int dsp_data[16];
} t_ecl_event_data;

#endif
