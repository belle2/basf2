program rcsample

string rcrequest;
assign rcrequest to "{USER}:rc:request";
monitor rcrequest;

string rcstate;
assign rcstate to "{USER}:rc:state";

ss rcsample_control 
{
  state NOTREADY {
    entry {
      strcpy(rcstate, "NOTREADY");
      printf("Updated RC state = %s\n", rcstate);
      pvPut(rcstate);
    }
    when (strcmp(rcrequest, "LOAD") == 0) {
      printf("Got RC request = %s\n", rcrequest);
    } state LOADING
    when (strcmp(rcrequest, "ABORT") == 0) {
      printf("Got RC request = %s\n", rcrequest);
    } state ABORTING
  }

  state READY {
    entry {
      strcpy(rcstate, "READY");
      printf("Updated RC state = %s\n", rcstate);
      pvPut(rcstate);
    }
    when (strcmp(rcrequest, "LOAD") == 0) {
      printf("Got RC request = %s\n", rcrequest);
    } state LOADING
    when (strcmp(rcrequest, "START") == 0) {
      printf("Got RC request = %s\n", rcrequest);
    } state RUNNING
    when (strcmp(rcrequest, "ABORT") == 0) {
      printf("Got RC request = %s\n", rcrequest);
    } state ABORTING
  } 

  state RUNNING {
    entry {
      strcpy(rcstate, "RUNNING");
      printf("Updated RC state = %s\n", rcstate);
      pvPut(rcstate);
    }
    when (strcmp(rcrequest, "PAUSE") == 0) {
      printf("Got RC request = %s\n", rcrequest);
    } state PAUSED
    when (strcmp(rcrequest, "STOP") == 0) {
      printf("Got RC request = %s\n", rcrequest);
    } state READY
    when (strcmp(rcrequest, "ABORT") == 0) {
      printf("Got RC request = %s\n", rcrequest);
    } state ABORTING
  }

  state PAUSED {
    entry {
      strcpy(rcstate, "PAUSED");
      printf("Updated RC state = %s\n", rcstate);
      pvPut(rcstate);
    }
    when (strcmp(rcrequest, "RESUME") == 0) {
      printf("Got RC request = %s\n", rcrequest);
    } state RUNNING
    when (strcmp(rcrequest, "STOP") == 0) {
      printf("Got RC request = %s\n", rcrequest);
    } state READY
  }

  state LOADING {
    when() {
      strcpy(rcrequest, "");
    } state READY
  }

  state ABORTING {
    entry {
      strcpy(rcstate, "ABORTING");
      printf("Updated RC state = %s\n", rcstate);
      pvPut(rcstate);
    }
    when () {
      strcpy(rcrequest, "");
    } state NOTREADY
  }
}
