----------------------------------------------------------------------
hsprogs - HSLB programs

Mikihiko Nakao, KEK

2014.05.13  first version
2014.07.05  copperstat is added
2015.04.16  libhslb and other programs are updated for hslb driver
----------------------------------------------------------------------

- hsprogs is a set of programs to directly control the HSLB board
  from the COPPER CPU.

- booths

  -- booths is a program to load HSLB's FPGA from COPPER CPU.

  -- this program is originally called "boothslb".

  -- to program an HSLB at FINESSE slot <a> with a bit file <file.bit>:

     booths -<a> <file.bit>

     (e.g., "booths -a hslb022.bit")

  -- multiple HSLBs can be programmed at once

     (e.g., "booths -abcd hslb022.bit" or "booths -a -b -c -d hslb022.bit")


- reghs

  -- reghs is a program to control HSLB's FPGA and hence the frontend
     board which is connected to HSLB via Belle2link.

  -- each FINESSE board and hence HSLB has 7-bit address space of
     8-bit registers.  Most of the 128 registers are mapped into the
     address space of the frontend board, while 17 of them are used
     locally.

  -- reghs is a rewrite of "B2LDover1" program, and also inherits features
     of "regmgt" program.

  -- reghs can both read and write registers, and can access both HSLB's
     registers and FEE's registers.

  -- to write a value <val> into a register at address <adr> of HSLB at
     FINESSE slot <a> (one of a,b,c,d):
     
     reghs -<a> <adr> <val>
     
     (e.g., "reghs -a 0x73 0" will write a value 0 into a register at
      address 0x73 of HSLB-a.  This is a dummy example and nothing
      will happen.)

  -- to read a value from address <adr> of HSLB <a>:

     reghs -<a> <adr>

     (e.g., "reghs -a 0x7d" should return "a: 7d val 0a", which is the
     FINESSE type and it should be 0x0a for HSLB.)

  -- HSLB registers are extended to 32-bit, when <adr> is between 0x80
     and 0xff.

  -- to write or read a value <val> at address <adr> of frontend board
     connected to FINESSE-<a>
     add "fee" in front of <adr>:

     reghs -<a> fee <adr> <val>     (to write)
     reghs -<a> fee <adr>           (to read)

     (e.g., "reghs -a fee 0x63" returns "reg63 = 14" if the register 0x63,
      which is the WINDOW register of the CDC board is set to 20 (=0x14).)

  -- original B2LDover1 was tailored to handle CDC frontend board, and
     frontend registers were predefined in the program.  reghs can
     simply replace B2LDover1, e.g.:
     
     reghs -a link
     reghs -a checkfee
     reghs -a verbose
     reghs -a trigger
     reghs -a -p delay 4
     reghs -a -p window 20
     reghs -a -p tdcth 3700

     (-p option is not needed, but it can still be there.  reghs produces
      much less output than B2LDover1)

  -- two exented HSLB registers are useful

     register 0x83: status register
       - bit 0 = 1 indicates that link is not established (equivalent to the
         LED)

     register 0x84: crc error and Rx data snapshot
       - bit [31:16] counts number of crc error up to 0xffff, which should
         be zero.  This counter is reset at run start.
       - bit [15:0] shows a snapshot of received Belle2link 16-bit data.
         A typical value is 00bc, when the link is idle.  If bc00 is found,
         link has probably a problem.


- readhs

  -- readhs is a simple FINESSE reading program, to read out small number
     of events.

  -- this program is a full rewrite of "record-nakao" program.

  -- this program checks headers/trailers attached by the copper device
     driver, but it does not check headers/trailers attached by
     Belle2link or HSLB.

  -- the main part of the program simply does "read' of the copper device
     and write the result in a file.

  -- one can start from readhs to write a program to read out any data
     from the frontend board.

- tesths

  -- tesths tries to clear all errors (and optionally read out COPPER)

  -- it tries all known reset procedure to establish the belle2link

  -- can be used with no argument, "tesths -a" to establish the belle2link

  -- can be used with number of events "tesths -ab -10000" to read out
     10000 events.

  -- it does read the copper device driver and check the Belle2link and
     HSLB headers/trailers and print out some of the results, but it does not
     save the main data.

- staths

  -- it reads out all HSLB registers and some of FEE registers and
     print them out in a comprehensive way, e.g. "staths -a" gives

     HSLB-a version 0.46 / ECL firmware 0 serial 773 version 2
     (a)    stat=18001000 (ff=0 rx=1 pr=0 pt=0 tx=18)
     (a)    rxdata=00bc rxlinkdown=0 rxcrcerr=0 feecrcerr=0
     (a)    event=100000 total=99994kB (avg=1000B last=1000B max=1000B)
     (a)    no b2link error

- copperstat

  -- read out all COPPER registers
  -- most of the registers are also available at /proc/copper

