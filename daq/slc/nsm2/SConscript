Import('env')

import os
from SCons.Script import *
from SCons.Scanner.C import CScanner

# the main directory where nsm2 is located
src_dir = '.'

def build_library(name, dirs, alias_name, libs = []):
    """build library"""
    # collect source files and install header files
    source_files = []
    for dir in dirs:
        includes = env.Install(os.path.join(env['INCDIR'], 'nsm2'), Glob(os.path.join(src_dir, dir, '*.h')))
        source_files.append([os.path.join(src_dir, str(source_file))
                             for source_file in Glob(os.path.join(src_dir, dir, '*.c'))])
        env.Alias(alias_name, includes)
    lib = env.SharedLibrary(os.path.join(env['LIBDIR'], name), [source_files], LIBS=libs)
    env.Alias(alias_name, lib)

build_library("libnsm2_corelib.so", ['corelib'], "nsm2_corelib")
build_library("libnsm2_b2lib.so", ['b2lib'], "nsm2_b2lib", libs=["nsm2_corelib"])

# build nsmd2, one file needs special CPPFLAGS, therefor a listing of files here and no Glob

nsmd2_files = ['./daemon/nsmd2.cc', env.Object('./daemon/nsmhash.c'), env.Object('./daemon/nsmd2info.cc', CPPFLAGS='-DNSMD2INFO')]
nsminfo2_files = ['./daemon/nsminfo2.cc', env.Object('./daemon/nsmhash.c') ]

env.Program ( target=os.path.join(env['BINDIR'], "nsmd2"), source = [nsmd2_files])
env.Program ( target=os.path.join(env['BINDIR'], "nsminfo2"), source = [nsminfo2_files])

# stop scons from further exploring the nsm2 folder
env['CONTINUE'] = False

Return('env')
