#!/bin/bash

# make sure belle2 is setup
if [ -z ${BELLE2_LOCAL_DIR} ]; then
  echo "No local belle2 directory set, please run b2setup in a local code checkout"
  exit 1
fi

# set default argument in case of no arguments
if [ $# -eq 0 ]; then
  set -- ${BELLE2_LOCAL_DIR}
fi

# check for help argument
echo $@ | grep -E -- "(^|\\s)(--help|-h)($|\\s)" &>/dev/null
if [ $? -eq 0 ]; then
    cat <<EOT
This script will run cppcheck with the appropriate arguments to check for
warnings from cppcheck as shown on the development build.

To run it on single files or directories just supply them as arguments:
    `basename $0` [<directory>...] [<filename>...]

To run on the full release directory run it without any arguments:
    `basename $0`

Additional options can be passed to cppcheck as well, for example -j to run 
cppcheck in parallel:
    `basename $0` -j50 framework

However in this case a directory to check has to be provided
EOT
    exit 1;
fi

cppcheck -q --enable=all --template=gcc --suppress=unusedFunction --inline-suppr --force --relative-paths=${BELLE2_LOCAL_DIR} \
         -D_PACKAGE_=PACKAGE -ULOG_NO_B2DEBUG -ULOG_NO_B2METHOD -ULOG_NO_B2INFO -ULOG_NO_B2WARNING -ULOG_NO_B2ASSERT -ULOG_NO_B2RESULT \
         -I ${BELLE2_LOCAL_DIR}/include/ -I ${BELLE2_LOCAL_DIR}/framework/data/cppcheck-includes/ \
         -i ${BELLE2_LOCAL_DIR}/build/ -i ${BELLE2_LOCAL_DIR}/include/ -i ${BELLE2_LOCAL_DIR}/framework/utilities/sha3hash \
         "$@"  2>&1
