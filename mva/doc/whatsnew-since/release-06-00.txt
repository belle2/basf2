Changes in the mva package since release-06-00
----------------------------------------------

 * Deprecated ``basf2_mva_utils.calculate_roc_auc`` as it calculated the efficiency-purity auc not the roc
   (efficiency-background retention) auc. Use instead ``basf2_mva_utils.calculate_auc_efficiency_vs_purity`` or 
   ``basf2_mva_utils.calculate_auc_efficiency_vs_backround_retention``.
 * Added an argument ``overwriteExistingExtraInfo`` to ``MVAExpert`` and ``MVAMultipleExperts`` modules so that
   one can choose to overwrite or keep the old value if the given extraInfo is already defined.
 * Updated the ``partial_fit(...)`` function for python based methods. Previously the ``epoch`` parameter was confusingly defined as 
   ``iEpoch * nBatches + iBatch``. It now returns correctly ``iEpoch`` with a new ``batch`` argument giving the index of the current batch.
   User scripts must be updated to overwrite ``partial_fit(state, X, S, y, w, epoch, batch)``.
 * Added an interface for pyTorch. Please see ``mva/examples/torch/simple.py`` for a basic example for binary classification. As with all other supported python interfaces the interface is designed for users to override the ``get_model(...)``, ``begin_fit(...)``, ``partial_fit(...)``, and ``apply(...)`` methods in their training script to define their models and training loop as needed.
