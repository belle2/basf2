/**************************************************************************
 * basf2 (Belle II Analysis Software Framework)                           *
 * Author: The Belle II Collaboration                                     *
 *                                                                        *
 * See git log for contributors and copyright holders.                    *
 * This file is licensed under LGPL-3.0, see LICENSE.md.                  *
 **************************************************************************/

#pragma once

#include <framework/datastore/RelationsObject.h>

namespace Belle2 {

  /**
   * Calibration pulse time and amplitude generated by TOPCalPulseGenerator.
   * Digitization must be done in TOPDigitizer configured to full waveform digitization.
   */

  class TOPSimCalPulse : public RelationsObject {
  public:

    /**
     * Default constructor
     */
    TOPSimCalPulse()
    {}

    /**
     * Full constructor
     */
    TOPSimCalPulse(int moduleID, unsigned channel, int pixelID,
                   double time, double amplitude):
      m_moduleID(moduleID), m_channel(channel), m_pixelID(pixelID),
      m_time(time), m_amplitude(amplitude)
    {}

    /**
     * Returns module ID
     * @return module ID
     */
    int getModuleID() const { return m_moduleID; }

    /**
     * Returns pixel ID (1-based)
     * @return software channel ID
     */
    int getPixelID() const { return m_pixelID; }

    /**
     * Returns hardware channel number
     * @return hardware channel number
     */
    unsigned int getChannel() const { return m_channel; }

    /**
     * Returns generated time
     * @return time in [ns]
     */
    double getTime() const { return m_time; }

    /**
     * Returns generated amplitude
     * @return amplitude in [ADC counts]
     */
    double getAmplitude() const { return m_amplitude; }


  private:

    int m_moduleID = 0;       /**< module ID (1-based) */
    unsigned m_channel = 0;   /**< hardware channel number (0-based) */
    int m_pixelID = 0;        /**< software channel ID (1-based) */
    float m_time = 0;         /**< generated time in [ns] */
    float m_amplitude = 0;    /**< generated amplitude in [ADC counts] */

    ClassDef(TOPSimCalPulse, 1); /**< ClassDef */

  };


} // end namespace Belle2

