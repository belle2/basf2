/**************************************************************************
 * BASF2 (Belle Analysis Framework 2)                                     *
 * Copyright(C) 2017 - Belle II Collaboration                             *
 *                                                                        *
 * Author: The Belle II Collaboration                                     *
 * Contributors: Nils Braun                                               *
 *                                                                        *
 * This software is provided "as is" without any warranty.                *
 **************************************************************************/
#include <tracking/ckf/cdc/filters/states/CDCStateTruthVarSet.h>

#include <tracking/trackFindingCDC/mclookup/CDCMCManager.h>

#include <tracking/mcMatcher/TrackMatchLookUp.h>
#include <tracking/dataobjects/RecoTrack.h>

using namespace std;
using namespace Belle2;
using namespace TrackFindingCDC;

void CDCStateTruthVarSet::initialize()
{
  TrackFindingCDC::VarSet<CDCStateTruthVarNames>::initialize();

  TrackFindingCDC::CDCMCManager::getInstance().fill();
}

bool CDCStateTruthVarSet::extract(const BaseCDCStateFilter::Object* pair)
{
  const std::vector<CDCCKFState>* const previousStates  = pair->first;
  CDCCKFState* state = pair->second;

  std::vector<CDCCKFState> allStates = *previousStates;
  allStates.emplace_back(state, 0);

  const RecoTrack* seedTrack = previousStates->front().getSeed();
  B2ASSERT("Path without seed?", seedTrack);

  var<named("truth")>() = 0;

  if (not m_mcUtil.allStatesCorrect(allStates)) {
    // Keep all variables set to false and return.
    return true;
  }

  const std::string& seedTrackStoreArrayName = seedTrack->getArrayName();

  TrackMatchLookUp mcCDCMatchLookUp("MCRecoTracks", seedTrackStoreArrayName);
  const RecoTrack* cdcMCTrack = mcCDCMatchLookUp.getRelatedMCRecoTrack(*seedTrack);

  var<named("truth")>() = 1;

//  var<named("truth_position_x")>() = cdcMCTrack->getPositionSeed().X();
//  var<named("truth_position_y")>() = cdcMCTrack->getPositionSeed().Y();
//  var<named("truth_position_z")>() = cdcMCTrack->getPositionSeed().Z();
//  var<named("truth_momentum_x")>() = cdcMCTrack->getMomentumSeed().X();
//  var<named("truth_momentum_y")>() = cdcMCTrack->getMomentumSeed().Y();
//  var<named("truth_momentum_z")>() = cdcMCTrack->getMomentumSeed().Z();

  return true;
}
