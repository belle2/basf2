/**************************************************************************
 * BASF2 (Belle Analysis Framework 2)                                     *
 * Copyright(C) 2015 - Belle II Collaboration                             *
 *                                                                        *
 * Author: The Belle II Collaboration                                     *
 * Contributors: Oliver Frost                                             *
 *                                                                        *
 * This software is provided "as is" without any warranty.                *
 **************************************************************************/
#pragma once

#include <tracking/trackFindingCDC/basemodules/TrackFinderCDCBaseModule.h>

#include <tracking/trackFindingCDC/findlets/SegmentFitter.h>
#include <tracking/trackFindingCDC/findlets/SegmentOrienter.h>
#include <tracking/trackFindingCDC/findlets/SegmentExporter.h>

#include <tracking/trackFindingCDC/eventdata/segments/CDCRecoSegment2D.h>

namespace Belle2 {
  /// Worker for building reconstructed segments form wirehits using facets.
  class SegmentFinderCDCBaseModule : public virtual TrackFinderCDCBaseModule {
  public:
    /// Constructor of the module overwritting the default desired orientation of the Segments.
    SegmentFinderCDCBaseModule();

    ///  Initialize the Module before event processing.
    void initialize() override;

    /// Processes the event and generates track candidates.
    void event() override;

    ///  Terminate the Module after event processing.
    void terminate() override;

    /** Implementation specific method that generates segments and
     *  writes them to the output vector not caring about orientation.
     */
    virtual void generateSegments(std::vector<Belle2::TrackFindingCDC::CDCRecoSegment2D>&) {}

  protected:
    /// Parameter: Name of the output StoreObjPtr of the segments generated by this module.
    std::string m_param_segmentsStoreObjName;

    /// Parameter: Switch if genfit::TrackCandidates shall be generated for each segment.
    bool m_param_createGFTrackCands;

    // Findlets
    /// Fits the generated segments
    TrackFindingCDC::SegmentFitter m_segmentFitter;

    /// Adjustes the orientation of the generated segments to a prefered direction of flight
    TrackFindingCDC::SegmentOrienter m_segmentOrienter;

    /// Writes out copies of the segments as track candidates.
    TrackFindingCDC::SegmentExporter m_segmentExporter;
  };
}
