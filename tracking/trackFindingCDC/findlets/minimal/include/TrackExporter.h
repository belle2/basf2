/**************************************************************************
 * basf2 (Belle II Analysis Software Framework)                           *
 * Author: The Belle II Collaboration                                     *
 *                                                                        *
 * See git log for contributors and copyright holders.                    *
 * This file is licensed under LGPL-3.0, see LICENSE.md.                  *
 **************************************************************************/
#pragma once

#include <tracking/trackFindingCDC/findlets/base/Findlet.h>

#include <vector>
#include <string>

namespace Belle2 {


  namespace TrackFindingCDC {
    class CDCTrack;

    /// Findlet to exports CDCTracks as RecoTracks
    class TrackExporter : public Findlet<CDCTrack&> {

    private:
      /// Type of the base class
      using Super = Findlet<CDCTrack&>;

    public:
      /// Short description of the findlet
      std::string getDescription() final;

      /// Expose the parameters to a module
      void exposeParameters(ModuleParamList* moduleParamList, const std::string& prefix) final;

      /// Signal initialisation phase to register store array for export
      void initialize() final;

      /// Write give tracks into track store array
      void apply(std::vector<CDCTrack>& tracks) final;

    private:
      /// Parameter: Switch if a RecoTrack be generated for each track
      bool m_param_exportTracks = true;

      /// Parameter: Name of the output StoreArray of the RecoTracks generated by this module.
      std::string m_param_exportTracksInto = "";

      /// Parameter: Discard covariance matrix in favour of a hand written one.
      bool m_param_discardCovarianceMatrix = false;

      /// Parameter: If non-zero, estimate seeds as for monopoles and set the momentum magnitude as this value
      double m_param_monopoleMomSeed = 0.0;
    };
  }
}
