########################################################
### Neurotrigger configuration file created by basf2 ###
########################################################

# '=' means the parameter is set and can be changed,
# '==' means the parameter is locked and should not be changed.

# number of input nodes 
nInput = 27
# number of output nodes 
nOutput = 2
# If true, relevantCut is applied to the sum over hit counters, 
#  otherwise directly on the hit counters.
cutSum = 0
# only used in the idhist module. it defines the how much of the idrange is cut off after making the histogram 
relevantCut = 0.02
# flag to allow for target tracks lying out of the output range to be rescaled during training. 
rescaleTarget = 0
# Number of networks. For network specific parameters you can give 
#  either a list with values for each network, or a single value that will be used
#  for all. The ranges are also valid if nPhi * nPt * nTheta * nPattern = nMLPs. 
nMLP = 5
# train z as output 
targetZ = 1
# train theta as output 
targetTheta = 1
# If true, multiply nHidden with number of input nodes. 
multiplyHidden = 0
# Maximal drift time, identical for all networks. 
tMax = 256
# Determine, how the event time should be obtained. The options are:
# 0: fastestpriority
# 1: fastest2d
# 2: etf
# 3: etf_or_fastestpriority
# 4: etf_or_fastest2d
# 5: etf_only
# 6: etfcc
# 7: etfhwin
# 8: etfcc_or_fastestpriority
# 9: min_etf_fastestpriority
# 10: min_etfcc_fastestpriority
ETOption = 7
# Phi region for which MLP is used in degree for all networks. 
phiRangeUse = [[0, 360]]
# relative ID range of the relevant wire IDs of the track segments 
#  that are taken into consideration when determining the best fitting track segments. 
IDRanges = [[0,-1.5,1.5,-7.5,-0.5,-1.5,1.5,0.5,7.5,-1.5,1.5,-8.5,0.5,-2.5,1.5,-0.5,10.5,-3.5,2.5],[1,-1.5,1.5,-7.5,-0.5,-1.5,1.5,0.5,7.5,-1.5,1.5,-8.5,0.5,-2.5,1.5,-0.5,10.5,-3.5,2.5],[2,-1.5,1.5,-7.5,-0.5,-1.5,1.5,0.5,7.5,-1.5,1.5,-8.5,0.5,-2.5,1.5,-0.5,10.5,-3.5,2.5],[3,-1.5,1.5,-7.5,-0.5,-1.5,1.5,0.5,7.5,-1.5,1.5,-8.5,0.5,-2.5,1.5,-0.5,10.5,-3.5,2.5],[4,-1.5,1.5,-7.5,-0.5,-1.5,1.5,0.5,7.5,-1.5,1.5,-8.5,0.5,-2.5,1.5,-0.5,10.5,-3.5,2.5]]
# Theta region for which MLP is used in degree for all networks. 
thetaRangeUse = [[10, 170]]
# Charge / Pt region for which MLP is used in 1/GeV for all networks. 
invptRangeUse = [[-5, 5]]
# Phi region for which MLP is trained in degree for all networks. 
#   Can be larger than use range to avoid edge effects. 
phiRangeTrain = [[0, 360]]
# Theta region for which MLP is trained in degree for all networks. 
#   Can be larger than use range to avoid edge effects. 
thetaRangeTrain = [[10, 170]]
# charge/Pt region for which MLP is trained in degree for all networks. 
#   Can be larger than use range to avoid edge effects. 
invptRangeTrain = [[-5, 5]]
# Number of nodes in each hidden layer for all networks
#  or factor to multiply with number of inputs.
#  The number of layers is derived from the shape.
nHidden = [[81]]
# Maximum number of hits in a single super layer for all networks. 
maxHitsPerSL = [1]
# Output scale for all networks. 
outputScale = [[-100, 100, 10, 170]]
# Super layer pattern for which MLP is trained for all networks.
#   Binary pattern of 9 * maxHitsPerSL bits (on/off for each hit).
#   0 in bit <i>: hits from super layer <i> are not used.
#   1 in bit <i>: hits from super layer <i> are used.
#   SLpattern = 0: use any hits present, don't check the pattern. 
SLpattern = [511, 383, 479, 503, 509]
# Super layer pattern mask for which MLP is trained for all networks.
#   Binary pattern of 9 * maxHitsPerSL bits (on/off for each hit).
#   0 in bit <i>: super layer <i> may or may not have a hit.
#   1 in bit <i>: super layer <i>
#                 - must have a hit if SLpattern bit <i> = 1
#                 - must not have a hit if SLpattenr bit <i> = 0 
SLpatternMask = [170]
# precision used for the hardware simulation 
precision = [12, 8, 8, 12, 10, 10]
