#!/usr/bin/env python3

##########################################################################
# basf2 (Belle II Analysis Software Framework)                           #
# Author: The Belle II Collaboration                                     #
#                                                                        #
# See git log for contributors and copyright holders.                    #
# This file is licensed under LGPL-3.0, see LICENSE.md.                  #
##########################################################################

# Normal imports
import argparse
import os
import sys

from ROOT import PyConfig
PyConfig.IgnoreCommandLineOptions = True

from validationplots import create_plots
import validationfunctions


def get_argument_parser():
    """ Define the accepted command line flags and read them in """
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-r",
        "--revisions",
        help="Takes a list of revisions (separated by spaces) and generates "
             "the plots for them",
        type=str,
        nargs='*'
    )
    parser.add_argument(
        "-f",
        "--force",
        help="Regenerates plots even if the requested combination exists "
             "already",
        action='store_true'
    )
    parser.add_argument(
        "--popular",
        help="Creates several sets of plots for popular combinations of "
             "revisions.",
        action="store_true",
        dest="popular"
    )

    return parser


if __name__ == "__main__":
    # Only execute the program if a basf2 release is set up!
    if os.environ.get('BELLE2_RELEASE_DIR', None) is None and os.environ.get('BELLE2_LOCAL_DIR', None) is None:
        sys.exit('Error: No basf2 release set up!')

    args = get_argument_parser().parse_args()

    # Go to the html directory and call the create_plots function
    save_dir = os.path.abspath(os.getcwd())

    if not os.path.exists("results"):
        print(
            "Please run b2validation before running b2validation-plots.",
            file=sys.stderr
        )
        sys.exit(164)

    if not os.path.exists("html"):
        os.mkdir("html")

    os.chdir('html')

    if not args.popular:
        # Generate plot for the revisions specified in CLI
        create_plots(
            revisions=args.revisions,
            force=args.force,
            work_folder=save_dir
        )
    else:
        # Generate several sets of plots
        # Type: List[List of revisions]
        revision_combinations = validationfunctions.get_popular_revision_combinations(save_dir)
        print("Plots for the following combinations of revisions will be created:")
        for revision in revision_combinations:
            print(" * " + ", ".join(revision))
        print()
        if args.revisions:
            print(
                "Warning: --revisions has no effect when --popular is "
                "specified.",
                file=sys.stderr
            )
        for revision_combination in revision_combinations:
            create_plots(
                revisions=revision_combination,
                force=args.force,
                work_folder=save_dir
            )

    # restore original working directory
    os.chdir(save_dir)
